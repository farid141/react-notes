dua aturan utama hooks:
1. hanya bisa dipanggil dalam komponen
2. tidak bisa dalam nested block

kegunaan:
- reusability code lebih rapi, seperti pola dalam kasus useEffect, didalamnya berisi request ke api dan menghasilkan state data, loading dan error 
- bisa memanage state, ketika state dalam custom hook update, komponen pemanggil akan re-render
- bisa outsource setter dan getter dari state

Membuat custom hook:
1. buat folder dengan nama hooks (bebas)
2. buat misal useFetch.js


*nama fungsi custom hooks harus berawalan use- agar "aturan utama hooks" diterapkan pada saat digunakan