Secara sekilas, sepertinya **`useEffect(callback)` tanpa parameter kedua** (dependency array) bekerja serupa dengan memanggil `callback` langsung di komponen. Namun, ada perbedaan mendasar antara keduanya. Berikut penjelasan:

### Apa yang Terjadi dengan `useEffect(callback)` Tanpa Dependency Array?
- **`useEffect(callback)`** akan dipanggil **setelah render pertama** dan **setiap kali komponen melakukan re-render.**
- Callback yang dimasukkan ke `useEffect` tidak akan dijalankan secara sinkron selama proses render, melainkan dijadwalkan untuk dijalankan setelah DOM selesai diperbarui.
- Dengan kata lain, **`useEffect` memanfaatkan mekanisme side effect React**, yang berarti operasi dijalankan setelah pembaruan DOM selesai.

### Apa yang Terjadi Ketika Memanggil `callback` Langsung di Komponen?
- Memanggil `callback` secara langsung di dalam body komponen (tanpa `useEffect`) berarti fungsi akan dieksekusi **selama proses render.**
- Eksekusi ini **sinkron** dan langsung terjadi setiap kali komponen dirender.
- Jika `callback` mengandung operasi yang lambat atau memiliki efek samping (e.g., API call, manipulasi DOM), ini bisa menyebabkan render yang tidak efisien atau perilaku tak terduga.

### Kesimpulan
Meskipun tampaknya keduanya menghasilkan efek serupa, **`useEffect(callback)` lebih cocok untuk side effect** seperti pembaruan data, manipulasi DOM, atau API calls karena tidak memblokir proses render. Sebaliknya, memanggil `callback` langsung di komponen hanya sesuai untuk operasi ringan yang tidak memiliki efek samping besar.