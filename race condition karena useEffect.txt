ketika sebuah useEffect depend ke sebuah atribut dan atribut tersebut berubah dengan cepat sebelum request pertama selesai. Race condition akan terjadi karena pengubahan state bersamaan.

# Berikut pencegahannya:
· · ·
useEffect(() => {
  let isSubscribed = true;

  // declare the function
  const fetchData = async () => {
    const data = await fetch(`https://yourapi.com?param=${param}`);
    const json = await response.json();

    // set state with the result if `isSubscribed` is true
    if (isSubscribed) {
      setData(json);
    }
  }

  // call the function
  fetchData()
    .catch(console.error);;

  // cancel any future `setData`
  return () => isSubscribed = false;
}, [param])
· · ·

Pada code tersebut, sebelum mengganti data dilakukan pengecekan isSubscribed. 
Sedangkan apabila callback baru dipanggil, isSubscribed bernilai true dan eksekusi sebelumnya tidak jadi mengubah state.

# Kapan Cleanup Function Dieksekusi?
Cleanup function tidak dieksekusi langsung setelah useEffect selesai, melainkan dieksekusi pada dua kondisi berikut:

1. Sebelum useEffect dijalankan lagi: Ketika dependency array berubah, React akan menjalankan cleanup function terlebih dahulu sebelum menjalankan useEffect lagi.
2. Ketika komponen di-unmount: Ketika komponen dihapus dari DOM, React akan menjalankan cleanup function.

Ini berarti kode dalam cleanup function tidak dieksekusi secara langsung setelah useEffect selesai, melainkan ditunda sampai salah satu dari dua kondisi di atas terjadi.